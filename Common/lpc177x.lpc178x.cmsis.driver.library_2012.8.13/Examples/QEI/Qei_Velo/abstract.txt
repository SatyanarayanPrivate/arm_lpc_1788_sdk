/***********************************************************************
* $Id$		abstract.txt		2011-06-02		
* @file		QEI\Qei_Velo\abstract.txt 
* @brief	Description of the QEI Velocity calculation example.
* @version	1.0
* @date		02. June. 2011
* @author	NXP MCU SW Application Team
* 
* Copyright(C) 2011, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
**********************************************************************/ 
  
@Example description:
	Purpose:
		This example describes how to use Quadrature Encoder Interface module to
		calculate velocity
	Process:
		This is just a simple QEI demo for demonstrate QEI operation on LPC177x_8x

		This example use a timer match interrupt to generate a virtual QEI signal output for QEI 
		module to capture (Phase A and Phase B channel). In case of using QEI virtual signal, 
		symbol VIRTUAL_QEI_SIGNAL must be set to 1. In this case, two GPIO output pin on port 0 
		can be used	to toggle state that defined through PHASE_A_PIN and PHASE_B_PIN. The MCFB0 
		(PHA - Phase A input) and MCFB1 (PHB - Phase B input) therefore must be connect to these GPIO pins.
		
		In this case, a 'virtual encoder' that has these following parameter:
 			- Encoder type			: Quadrature encoder
			- Max velocity			: MAX_VEL (Round Per Minute)
 			- Encoder Resolution	: ENC_RES (Pulse Per Round)
 		The calculated frequency is: Freq = (MAX_VEL * ENC_RES * COUNT_MODE) / 60 (Hz)
 		The timer therefore should be set to tick every cycle T = 1/Freq (second)
		

@Directory contents:
	\EWARM: includes EWARM (IAR) project and configuration files
	\Keil:	includes RVMDK (Keil)project and configuration files 
	 
	Qei_Velo.c: Main program

@How to run:
	Hardware configuration:		
		This example was tested on:
			 LPC1788 OEM Board rev A and OEM Base Board rev A
			 	Jumpers: Optional
	
		QEI configuration:
			Use P1.18 and P1.19 to generate virtual signal supply for QEI peripheral by using timer 
			match interrupt output.
			Connect: 
				- P1.18 with P1.20 QEI_PHA
				- P1.19 with P1.23 QEI_PHB		

		Pin Map:
							EA Brd
				P1.18		J5.31
				P1.19		J3.33
				P1.20		J5.32
				P1.23		J3.35

				
		Serial display configuration: (e.g: TeraTerm, Hyperterminal, Flash Magic...) 
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- UART0: USB serial port
					+ All jumpers: Default
				- UART1: 
					+ P0.15 (@ J5.19) - JP12.2
					+ P0.16 (@ J3.24) - JP13.2
				- UART2:
					+ JP6: 	1-2: OFF
							3-4: OFF
							5-6: ON
					+ JP12: 1-2
					+ JP13: 1-2
					+ Other jumpers: Default
				- UART3:
					+ P0.2 (@J5.13) - JP12.2
					+ P0.3 (@J5.14) - JP13.2
				- UART4:
					+ P0.22 (@J3.25) - JP12.2
					+ P2.9  (@J3.15) - JP13.2
	    	2. LPC1788 IAR Start Kit Rev.B
				- UART0: 
					All jumpers: optional
			Note: Pls sure that "USED_UART_DEBUG_PORT" macro in debug_frmwrk.h is set correctly
			
			Setting:
				+ 115200bps 
				+ 8 data bit 
				+ No parity 
				+ 1 stop bit 
				+ No flow control 
	
	Running mode:
		This example can run on RAM/ROM mode.
					
		Note: If want to burn hex file to board by using Flash Magic, these jumpers need
			to be connected:
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- JP20: 1-2: ON
						3-4: ON
			(Using UART0 on USB serial port
			Sure that you choose correct COM port number - Pls reference at:
			"Device Manager" -> "Ports(COM & LPT)" -> "USB Serial Port (COMx)")
		    
		    2. LPC1788 IAR Start Kit Rev.B
				- RST_E: ON
				- ISP_E: ON
	
	Step to run:
		- Step 1: Build example.
		- Step 2: Burn hex file into board (if run on ROM mode)
		- Step 3: Connect UART0\1\2 on this board to COM port on your computer
		- Step 4: Configure hardware and serial display as above instruction 
		- Step 5: Run example and observe data on serial display.
		When remove jumper between P1.18 - P1.20/P1.19 - P1.23, direction changing will be occurred.

@Note: 
   Bit RESP, RESV, RESI must be set after reset QEILOAD register.
