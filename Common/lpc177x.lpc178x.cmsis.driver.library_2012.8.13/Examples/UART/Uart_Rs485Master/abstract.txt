/***********************************************************************
* $Id$		abstract.txt		2011-06-02		
* @file		UART\Uart_Rs485Master\abstract.txt 
* @brief	Description of the RS485_Master example.
* @date		02. June. 2011
* @author	NXP MCU SW Application Team
* 
* Copyright(C) 2011, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
**********************************************************************/ 
  
@Example description:
	Purpose:
		This example describes how to use RS485 functionality on UART of LPC1788
		in master mode.
	Process:	
		RS485 function on UART acts as Master mode on RS485 bus.
		Master device will send a specified slave device address value
		first, then master device will send data frames. After sending
		completed, master device wait for response from slave device (example RS485_slave).
		
@Directory contents:
	\Keil:	includes RVMDK (Keil)project and configuration files 
	\EWARM: includes EWARM (IAR) project and configuration files

	Uart_Rs485Master.c: Main program

@How to run:
	Hardware configuration:		
		This example was tested on:
			LPC1788 OEM Board rev A and OEM Base Board rev A
				Jumpers: Optional
				
	    RS485 Connection:
			Pls see the 'Transceiver_Master.png' in this directory for wiring information.

	    Pin Map:
            UART1: 
    						EA Board
    			P0.15			J5.19
    			P0.16			J3.24
    
    			P0.20			J3.26

            UART2: 
    						EA Board
    			P0.10			J3.20
    			P0.11			J3.11
    
    			P1.19			J3.33
            UART3: 
    						EA Board
    			P0.25			J5.24
    			P0.26			J3.28
    
    			P1.30			J5.37

            UART4: 
    						EA Board
    			P0.22			J3.25
    			P2.9			J3.15
    
    			P0.21			J5.22			
    				
	
	Running mode:
		This example can run on RAM/ROM mode.
					
		Note: If want to burn hex file to board by using Flash Magic, these jumpers need
			to be connected:
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- JP20: 1-2: ON
						3-4: ON
			(Using UART0 on USB serial port
			Sure that you choose correct COM port number - Pls reference at:
			"Device Manager" -> "Ports(COM & LPT)" -> "USB Serial Port (COMx)")
		    
		    2. LPC1788 IAR Start Kit Rev.B
				- RST_E: ON
				- ISP_E: ON
	
	Step to run:
		- Step 1: Choose the UART component to work with by #define UART_TEST_NUM and then Build example.
		- Step 2: Burn hex file into board (if run on ROM mode)
		- Step 3: Connect UART on this board to COM port on your computer
		- Step 4: Connect RS485 as above instruction (using ADM485)
		- Step 5: Run example and using Serial display to monitor the communication between master and slave.

