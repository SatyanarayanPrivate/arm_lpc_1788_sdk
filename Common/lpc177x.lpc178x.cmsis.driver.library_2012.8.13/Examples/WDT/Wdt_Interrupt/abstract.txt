 /***********************************************************************
* $Id$		abstract.txt		2011-06-02		
* @file		WDT\Wdt_Interrupt\abstract.txt 
* @brief	Description of the WDT Interrupt example.
* @date		02. June. 2011
* @author	NXP MCU SW Application Team
* 
* Copyright(C) 2011, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
**********************************************************************/
  
@Example description:
	Purpose:
		This example describes how to use WDT to generate interrupt after a specific time.
	Process:
		In this example, WDT disables reset function, WDT just generates interrupt when the 
		Watchdog times out value or warning value. 
		
		Before WDT interrupt, current value of Watchdog timer will be written continuously 
		into serial display (these value will be decreased from 5000000 to 0). 
		
		Knowledge, the interrupt is occurred at the time when the WDT timer is timeout or when
		the WDT counter decreasing reaches the Warning Value stored in WDWARNINT register. 
		we can select the modes by input a serial terminal. 
		
		The WDT in this example has set the timeout value after 10s, and the value for warning
		is 0.5s
		
		Note that: dispaly data via UART will cause delay.
		
@Directory contents:
	\EWARM: includes EWARM (IAR) project and configuration files 
	\Keil:	includes RVMDK (Keil)project and configuration files 
	
	Wdt_Interrupt.c: Main program

@How to run:
	Hardware configuration:		
		This example was tested on:
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				All jumpers: Default
			2. LPC1788 IAR Start Kit Rev.B
				- 3.3VA_E	:ON
				- VREG		:ON
				- IO_E		:ON
				- PWR_SEL	:depends on power source selection
		(Choose correct working board by setting "_CURR_USING_BRD" marco in .\BoardSupport\bsp.h file)
				
	Serial display configuration: (e.g: TeraTerm, Hyperterminal, Flash Magic...) 
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- UART0: USB serial port
					+ All jumpers: Default
				- UART1: 
					+ P0.15 (@ J5.19) - JP12.2
					+ P0.16 (@ J3.24) - JP13.2
				- UART2:
					+ JP6: 	1-2: OFF
							3-4: OFF
							5-6: ON
					+ JP12: 1-2
					+ JP13: 1-2
					+ Other jumpers: Default
				- UART3:
					+ P0.2 (@J5.13) - JP12.2
					+ P0.3 (@J5.14) - JP13.2
				- UART4:
					+ P0.22 (@J3.25) - JP12.2
					+ P2.9  (@J3.15) - JP13.2
	    	2. LPC1788 IAR Start Kit Rev.B
				- UART0: 
					All jumpers: optional
			Note: Pls sure that "USED_UART_DEBUG_PORT" macro in debug_frmwrk.h is set correctly
			
			Setting:
				+ 115200bps 
				+ 8 data bit 
				+ No parity 
				+ 1 stop bit 
				+ No flow control 
	
	Running mode:
		Running mode:
		This example can run on RAM/ROM mode.
					
		Note: If want to burn hex file to board by using Flash Magic, these jumpers need
			to be connected:
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- JP20: 1-2: ON
						3-4: ON
			(Using UART0 on USB serial port
			Sure that you choose correct COM port number - Pls reference at:
			"Device Manager" -> "Ports(COM & LPT)" -> "USB Serial Port (COMx)")
		    
		    2. LPC1788 IAR Start Kit Rev.B
				- RST_E: ON
				- ISP_E: ON
	
	Step to run:
		- Step 1: Build example.
		- Step 2: Burn hex file into board (if run on ROM mode)
		- Step 3: Connect UART on this board to COM port on your computer
		- Step 4: Configure hardware and serial display as above instruction 
		- Step 5: Run example and observe data on serial display
					+ Press '1' to start WDT operation for the TIMEOUT interrupt or else press '2' for WARNING 
					interrupt.
					+ See the current value of WDT displayed on screen to know where the interrupt comes from.
					+ After WDT interrupt, the notice sentence will be display and LED begin blinking.
							