 /***********************************************************************
* $Id$		abstract.txt		2011-06-02		
* @file		EMAC\Emac_uIP\abstract.txt 
* @brief	Description of the EMAC uIP example.
* @version	1.0
* @date		02. June. 2011
* @author	NXP MCU SW Application Team
* 
* Copyright(C) 2011, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
**********************************************************************/
  
@Example description:
	Purpose:
		This example describes how to handle a  single network interface and 
		contains the IP, ICMP, UDP and TCP protocols. 
	Process:
		The uIP TCP/IP stack is an extremely small implementation of the TCP/IP 
		protocol suite intended for embedded systems running low-end 8 or 16-bit 
		microcontrollers. The code size and RAM requirements of uIP is an order of 
		magnitude smaller than other generic TCP/IP stacks today. 
		
		The uip_webserver implements WEB server.
		The default IP address is:
			192.168.0.100
		The default router's IP address is:
			192.168.0.1
		The subnet mask is:
			255.255.255.0
		IP address on your PC should not be one of these IP addresses above
			
@Directory contents:
	\EWARM: includes EWARM (IAR) project and configuration files
	\Keil:	includes RVMDK (Keil)project and configuration files	
	\apps: contains a few example applications
		+ \dhcpc: Implementation of DHCPC protocol
		+ \hello-world: A small example showing how to write applications with protosockets.
		+ \resolv: DNS resolver
		+ \smtp: SMTP E-mail sender
		+ \telnetd: Implementation of TELNET network protocol
		+ \webclient: Implementation of the HTTP client.
		+ \webserver: Implementation of an HTTP server
	\common: implement some supported standard functions (printf, serial..) 
 	\uip: contains files that implement uIP stack
	\lpc177x_8x_port: include main program

@How to run:
	Hardware configuration:	
		This example is tested on:	
			LPC1788 OEM board connects with QVGA base board v1.2
			These jumper should be configured as follows:
				- ETH_PHY_PD: OFF
			Note: Sure that all resistors from R44-R53 on OEM board were been filled.
				
		Serial display configuration: (e.g: TeraTerm, Hyperterminal, Flash Magic...) 
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- UART0: USB serial port
					+ All jumpers: Default
				- UART1: 
					+ P0.15 (@ J5.19) - JP12.2
					+ P0.16 (@ J3.24) - JP13.2
				- UART2:
					+ JP6: 	1-2: OFF
							3-4: OFF
							5-6: ON
					+ JP12: 1-2
					+ JP13: 1-2
					+ Other jumpers: Default
				- UART3:
					+ P0.2 (@J5.13) - JP12.2
					+ P0.3 (@J5.14) - JP13.2
				- UART4:
					+ P0.22 (@J3.25) - JP12.2
					+ P2.9  (@J3.15) - JP13.2
	    	2. LPC1788 IAR Start Kit Rev.B
				- UART0: 
					All jumpers: optional
			Note: Pls sure that "USED_UART_DEBUG_PORT" macro in debug_frmwrk.h is set correctly
			
			Setting:
				+ 115200bps 
				+ 8 data bit 
				+ No parity 
				+ 1 stop bit 
				+ No flow control  
	
	Running mode:
		This example can run only on ROM mode.
					
		Note: If want to burn hex file to board by using Flash Magic, these jumpers need
			to be connected:
			1. LPC1788 OEM Board rev A and OEM Base Board rev A
				- JP20: 1-2: ON
						3-4: ON
			(Using UART0 on USB serial port
			Sure that you choose correct COM port number - Pls reference at:
			"Device Manager" -> "Ports(COM & LPT)" -> "USB Serial Port (COMx)")
		    
		    2. LPC1788 IAR Start Kit Rev.B
				- RST_E: ON
				- ISP_E: ON
	
	Step to run:
		- Step 1: Build example.
		- Step 2: Burn hex file into board 
		- Step 3: Use normal (straight) cable to connect from your PC to ETH port on eval board
		- Step 4: Connect UART0 on this board to COM port on your computer
		- Step 5: Configure hardware and serial display as above instruction 
		- Step 6: Re-config IP address on PC:
					+ IP address: 192.168.0.x (x != 1, 100)
					+ Subnet mask: 255.255.255.0
		- Step 7: Reset board, monitor the status via serial display until EMAC initialized
		- Step 8: Open command prompt window, execute 'ping 192.168.0.100' command
		- Step 9: Open web browser, access to address "http://192.168.0.100" to display the content
		           of the webpage.	
	
			